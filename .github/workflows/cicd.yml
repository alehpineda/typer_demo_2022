name: Typer App CI/CD

on:
  push:
    branches:
      - master

jobs:
  cicd:
    name: CI/CD
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      #----------------------------------------------
      # install your root project, if required
      #----------------------------------------------
      - name: Install library
        run: poetry install --no-interaction
      #----------------------------------------------
      #              run flake8
      #----------------------------------------------
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          poetry run flake8 typer_demo_2022/ --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          mkdir -p reports/flake8
          poetry run flake8 typer_demo_2022/ --count --exit-zero --max-complexity=10 --max-line-length=79 --statistics --format=html --htmldir=reports/flake8
      - name: Archive flake8 coverage results
        uses: actions/upload-artifact@v2
        with:
          name: flake8-coverage-report
          path: reports/flake8/
      #----------------------------------------------
      #              run pytest
      #----------------------------------------------          
      - name: Test with pytest
        run: |
          poetry run py.test -v --cov tests/ --html=reports/pytest/report.html
      - name: Archive pytest coverage results
        uses: actions/upload-artifact@v2
        with:
          name: pytest-coverage-report
          path: reports/pytest/
      #----------------------------------------------
      #              Build
      #----------------------------------------------          
      - name: Build to GitHub Actions
        run : |
          poetry version patch
          poetry build
      - name: Save to Github Actions
        uses: actions/upload-artifact@v2
        with:
          name: typer-demo-artifact
          path: dist/
      #----------------------------------------------
      #              Deploy
      #----------------------------------------------          
      - name: Deploy to PyPI
        uses: conchylicultor/pypi-build-publish@v1
        with:
          pypi-token: ${{ secrets.PYPI_API_TOKEN }}
